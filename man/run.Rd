% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/execute.R
\name{run}
\alias{run}
\title{Execute an R expression inside a Docker container}
\usage{
run(func, image = paste0("r-base:", r_version()), debug = FALSE)
}
\arguments{
\item{func}{Function object or expression to be executed in the R session
within the Docker container. Package functions should be referenced using
the `::` notation and only packages installed in the Docker container are
accessible.}

\item{image}{A string in the `image:tag` format specifying either a local
Docker image or an image available on DockerHub. Default image is
`r-base:your-r-version` where your R version is determined from your local
R session.}

\item{debug}{A logical indicating whether to print out the commands that are
being executed via the shell. This is mostly helpful to see what is
happening when things start to error.}
}
\value{
Value of the evaluated expression.
}
\description{
This function is somewhat similar to [callr::r()] in that the user can pass
a function (or really any expression) to be evaluated. This expression will
be executed within the context of a Docker container and the result will be
returned within the local R session. While the results will be returned,
most side effects, e.g. printing and plotting, will be lost since these are
being screamed into the void of the Docker container. However, the local file
system and [tempdir()] are mounted to the Docker container, so any side
effects that involve writing to the home directory or the temp directory will
work as expected!
}
\examples{
\dontrun{
run(
  {
    mtcars <- mtcars |>
      transform(cyl = as.factor(cyl))
      model <- lm(mpg ~ ., data = mtcars)
      model
  }
)
}

}
